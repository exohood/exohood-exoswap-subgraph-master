type DemaxFactoryEntity @entity {
    # factory address
    id: ID!
    # pair info
    pairCount: Int!
    # transactions
    txCount: BigInt!,
#    提供的总共的价值
    LPValue: BigDecimal!

    tradeValue:BigDecimal!
}

type TokenEntity @entity {
    # token address
    id: ID!
    # mirrored from the smart contract
    symbol: String!
    name: String!
    decimals: BigInt!
    # token specific volume
    tradeVolume: BigDecimal!
    # transactions across all pairs
    txCount: BigInt!
}

type PairEntity @entity {
    # pair address
    id: ID!
    # mirrored from the smart contract
    token0: TokenEntity!
    token1: TokenEntity!
    reserve0: BigDecimal!
    reserve1: BigDecimal!
    txCount: BigInt!
    txBurgerValue: BigDecimal!
    # creation stats
    createdAtTimestamp: BigInt!
    createdAtBlockNumber: BigInt!
}

type TransactionEntity @entity {
    id: ID! # txn hash
    blockNumber: BigInt!
    timestamp: BigInt!
    mints: [MintEntity]!
}

type MintEntity @entity {
    # transaction hash + "-" + index in mints Transaction array
    id: ID!
    transactionEntity: TransactionEntity! @derivedFrom(field: "mints")

    timestamp: BigInt!
    pair: PairEntity!

    # populated from the primary Transfer event
    to: Bytes!
    liquidity: BigDecimal!

    amount0: BigDecimal
    amount1: BigDecimal
}

type MapEntity @entity {
    id:ID!
    pairAddress:Bytes!
}

type DayData @entity {
    id: ID!
    date: Int!
    volumeBNB: BigDecimal!
    txCount: BigInt!
}
